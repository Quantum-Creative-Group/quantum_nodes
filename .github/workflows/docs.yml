name: Build documentation
on:
  pull_request: # Run in pull requests

  workflow_dispatch: # Allow to run this workflow manually
    inputs:
      cache:
        description: "Use build cache"
        required: false
        default: "true"

  push:
    tags: # Run when a new release is created
      - "*"
    branches: # Run when there is a push to main
      - "main"

env:
  USE_CACHE: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.cache == 'true') || (github.event_name == 'pull_request') }}
  DEPLOY: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags') }}

jobs:
  build:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.5.0

      - uses: actions/setup-python@v4.3.0
        with:
          python-version: "3.10"

      - uses: syphar/restore-virtualenv@v1.2
        id: cache-virtualenv
        with:
          requirement_files: requirements.txt

      - name: Install OS packages
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip libgl1-mesa-glx libenchant-2-2

      - name: Install dependencies
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt

      - name: Cache docs build directory
        uses: actions/cache@v3.0.11
        if: env.USE_CACHE == 'true'
        with:
          path: docs/build/
          key: docs-build-${{ hashFiles('docs/source/conf.py') }}

      - name: Cache animation nodes source code
        id: animation-nodes
        uses: actions/cache@v3.0.11
        if: env.USE_CACHE == 'true'
        with:
          path: animation_nodes/
          key: animation-nodes-source-code-${{ hashFiles('animations_nodes/__init__.py') }}

      - name: Download and prepare animation nodes source code
        if: steps.cache.animation-nodes.cache-hit != 'true'
        run:
          wget https://github.com/JacquesLucke/animation_nodes/releases/download/master-cd-build/animation_nodes_v2_3_linux_py310.zip
          unzip animation_nodes_v2_3_linux_py310.zip

      - name: Check spelling
        run: |
          cd docs
          make spelling

      - name: Build documentation
        run: |
          cd docs
          sphinx-apidoc -t "_templates/" --implicit-namespaces -d 1 -f -M -T -o source/developers_manual/code/ ../quantum_nodes "/*animation_nodes/*" "/*lib/*"
          sed -i "1s/.*/Code documentation/" source/developers_manual/code/quantum_nodes.rst
          sed -i "2s/.*/==================/" source/developers_manual/code/quantum_nodes.rst
          make html MODULE=quantum_nodes

      - name: Zip build
        if: env.DEPLOY == 'true'
        run: |
          cp -r docs/build/html build_docs
          zip -r build_docs build_docs

      - uses: actions/upload-artifact@v3.1.1
        if: env.DEPLOY == 'true'
        with:
          name: build_docs
          path: build_docs.zip

  deploy:
    name: Publish documentation
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2.5.0

      - uses: actions/download-artifact@v3.0.1
        with:
          name: build_docs
          path: .

      - name: Unzip build
        run: unzip build_docs.zip

      - name: Deploy on main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3.9.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build_docs
